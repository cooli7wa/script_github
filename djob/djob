#!/bin/bash -
IFS="
	 "
PATH=/usr/local/bin:/bin:/usr/bin
export PATH

show_complete_job=1
g_job_number=
date_from=
date_to=
days=
djob_file_path="$HOME""/djob_file/"
djob_list="$djob_file_path""djob_list"
djob_list_tmp="$djob_job_file_path""djob_list_tmp"

error()
{
	echo "$@" 1>&2
	usage_and_exit 1
}

usage_and_exit()
{
	echo "Usage: djob [--verbose][--complete][--date<xxxx>][--help]
			--date 20170314-20170315 : jobs from 20170314 to 20170315
			--date 3d : jobs within three days
			--date 1w : jobs within one week
			--date all : all jobs
			--verbose : show the detailed task information
			--complete : show complete jobs
			--help : show useage
		 "
	eval "exit $1"
}

title_print()
{
	local title=`sed -n 1p "$djob_list"`
	title=${title//:/    }
    echo $title
}

#job_print()
#@in job_line
job_print()
{
	if [ "z`echo "$1" | cut -s -d : -f 4`" != "z" ]
    then
        echo -e "\033[32m${1//:/  }\033[0m"
    else
		local complete_time="no"
        local title=`echo -n "$1" | cut -s -d : -f 2`
        local num=`echo -n "$1" | cut -s -d : -f 1`
        local create_time=`echo -n "$1" | cut -s -d : -f 3`
        local priority=`echo -n "$1" | cut -s -d : -f 5`
		echo -e ""$num"  \033[36m"$title"\033[0m  "$create_time"  "$complete_time"  "$priority""
    fi
}

#show_job_update
#@in job_number
show_job_update()
{
	if [ -e "$djob_file_path""$1".job ]
	then
		awk 'BEGIN{eprint=0}
			{
				if($0~/\[update\]/)
					eprint=1;
				else if($0~/\[end update\]/)
					eprint=0;
				if(eprint)
					print;
			}' "$djob_file_path""$1".job
	else
		echo "no update"
	fi
}

print_job_message()
{
	echo ""
#	show title
	title_print
#	show job info
	job_print "`sed -n "/^"$1":/p" "$djob_list"`"
#	show job update
	show_job_update "$1"
#   show job summarize, if exist 
}

date_print()
{
	echo -e "\033[31m${1:0:4}.${1:4:2}.${1:6:2}\033[0m"
}

sort_job_list()
{
	sed -n "1p" "$djob_list" > "$djob_list_tmp"
	sed -n '2,$p' "$djob_list" | sort -t: -k4 -k5 >> "$djob_list_tmp"
	mv "$djob_list_tmp" "$djob_list"
}

#根据传入的date，来显示当前date的jobs
show_daily_job()
{
	if [ "$1" == "`date +\%Y\%m\%d`" ]
	then
		if [[ "$show_complete_job" -eq 1 ]]
		then
			cat "$djob_list" | while read line
			do
				if [[ "`echo -n "$line" | cut -s -d : -f 4`" =~ "$1" ]] || [[ -z "`echo -n "$line" | cut -s -d : -f 4`" ]]
				then
					job_print "$line"
				fi
			done
		else
			cat "$djob_list" | while read line
			do
				if [[ -z "`echo -n "$line" | cut -s -d : -f 4`" ]]
				then
					job_print "$line"
				fi
			done
		fi
	else
		cat "$djob_list" | while read line
		do
			if [[ "`echo -n "$line" | cut -s -d : -f 4`" =~ "$1" ]]
			then
				job_print "$line"
			fi
		done

	fi
}

add_job()
{
    local title_priority
	echo "new job format: title@youxianji"
	read -p "enter: " title_priority
	local title=`echo "$title_priority" | cut -s -d @ -f 1`
	local priority=`echo "$title_priority" | cut -s -d @ -f 2`
	if [ z$priority == z"" ] 
	then
		title="$title_priority"
		priority=1
		echo "Apply default priority 1"
	fi
	local current_max_num="`sed -n '2,$p' "$djob_list" | cut -s -d : -f 1 | sort -nr | head -1`"
	local job_number=$(($current_max_num+1))
	echo ""$job_number":"$title":"`date +\%Y\%m\%d\%H\%M`"::"$priority"" >> "$djob_list"
}

edit_job_info()
{
	local job_number
	if [ -z $g_job_number ]
	then
		echo "enter job number"
		read job_number
	else
		job_number="$g_job_number"
	fi
	echo "job format: title@priority"
	local title_priority
	read -p "enter: " title_priority
	local title=`echo "$title_priority" | cut -s -d @ -f 1`
	local priority=`echo "$title_priority" | cut -s -d @ -f 2`
	if [ z$priority == z"" ] 
	then
		title="$title_priority"
		echo "Apply default priority 1"
	fi
    local job_info=`sed -n "/^"$job_number":/p" "$djob_list"`
	local date_create=`echo -n "$job_info" | cut -s -d : -f 3`
	local date_complete=`echo -n "$job_info" | cut -s -d : -f 4`
	sed -i "/^"$job_number":/d" "$djob_list"
	echo ""$job_number":"$title":"$date_create":"$date_complete":"$priority"" >> "$djob_list"
}

show_job()
{
	local job_number
	if [ -z $g_job_number ]
	then
		echo "enter job number"
		read job_number
	else
		job_number="$g_job_number"
	fi
    print_job_message "$job_number"
}

del_job()
{
	local job_number
	if [ -z $g_job_number ]
	then
		echo "enter job number"
		read job_number
	else
		job_number="$g_job_number"
	fi
	sed -i "/^"$job_number":/d" "$djob_list"
}

complete_job()
{
	local job_number
	if [ -z $g_job_number ]
	then
		echo "enter job number"
		read job_number
	else
		job_number="$g_job_number"
	fi
	local date="`date +\%Y\%m\%d\%H\%M`"
	sed -i -r "s/(^$job_number:.*:.*:)(:[0-9]$)/\1$date\2/g" "$djob_list"
}

uncomplete_job()
{
	local job_number
	if [ -z $g_job_number ]
	then
		echo "enter job number"
		read job_number
	else
		job_number="$g_job_number"
	fi
	sed -i -r "s/(^$job_number:.*:.*:).*(:[0-9]$)/\1$date\2/g" "$djob_list"
}
add_update()
{
	local job_number
	if [ -z $g_job_number ]
	then
		echo "enter job number"
		read job_number
	else
		job_number="$g_job_number"
	fi
	echo "please enter update message: "
	local IFS_BAK="$IFS"
	IFS="\n"
	local message
	read  message
	IFS="$IFS_BAK"
	if [ ! -e "$djob_file_path""$job_number".job ]
	then
		cp "$djob_file_path"example.job "$djob_file_path""$job_number".job
	    local job_info=`sed -n "/^"$job_number":/p" "$djob_list"`
		local title=`echo -n "$job_info" | cut -s -d : -f 2`
	    local date_create=`echo -n "$job_info" | cut -s -d : -f 3`
	    local date_complete=`echo -n "$job_info" | cut -s -d : -f 4`
		local priority=`echo -n "$job_info" | cut -s -d : -f 5`
		sed -r -i "s/(内部编号:)/\1$job_number/g;s/(标题:)/\1$title/g;
				 s/(创建日期:)/\1$date_create/g;s/(完成日期:)/\1$date_complete/g;
				 s/(优先级:)/\1$priority/g" "$djob_file_path""$job_number".job
	fi
	sed -i "/end update/i`date +\%Y\%m\%d\%H\%M`" "$djob_file_path""$job_number".job
	sed -i "/end update/i$message" "$djob_file_path""$job_number".job
}

add_summarize()
{
	echo add_summarize
}

cal_date_from()
{
	echo cal_date_from
}

if [ "$#" -ne 0 ]
then
	while [ "$#" -gt 0 ]
	do
		case $1 in
		--date )
			case $2 in
			*d)
				#TODO : should fix, month is 30days
				days=`echo "$2" | sed -r "s/^([0-9]+)d/\1/g"`
				date_from=$((`date +\%Y\%m\%d`-$days))
				date_to=`date +\%Y\%m\%d`
				shift
				;;
			*)
				break
				;;
			esac
			;;
		--help | -h | '--?' | '-?' )
			usage_and_exit 0
			;;
		-* | --* )
			error "Unrecongnized option: $1"
			;;
		*)
			break
			;;
		esac
		shift
	done
else
	date_from=`date +\%Y\%m\%d`
	date_to=$date_from
	show_complete_job=0
fi

sort_job_list
title_print
for((i="$date_from" ; i<="$date_to" ; i++))
do
	date_print "$i"
	show_daily_job "$i"
done

read nouse
echo "What to do next:
 aj : add new job.
 au : add update. au [xxx]
 as : add summarize. as [xxx]
 sj : show job. sj [xxx]
 ej : edit job info. ej [xxx]
 cj : complete job. cj [xxx]
 ucj : uncomplete job. fj [xxx]
 dj : del job. dj [xxx]
 0 : exit"
read -p "your choose: " choose g_job_number
case "$choose" in
aj)
    add_job
	;;
au)
	add_update
	;;
as)
	add_summarize
	;;
sj)
	show_job
    ;;
ej)
	edit_job_info
	;;
cj)
	complete_job
	;;
ucj)
	uncomplete_job
	;;
dj)
	del_job
	;;
0)
    exit 0
    ;;
*)
	error "Unrecongnized option"
    ;;
esac
exit 0
