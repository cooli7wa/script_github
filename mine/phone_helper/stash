#!/bin/bash -

#TODO: should check folder
REPO_ROOT=`repo info | grep "Mount path" | head -1 | grep -o '/.*/'`
CUSTOM_FOLDER=$REPO_ROOT/customization/
TMP_FOLDER=$CUSTOM_FOLDER/tmp
TARGET_FOLDER=$TMP_FOLDER
PHONE_NAME_FILE=$TARGET_FOLDER/phone_name
XML_FILE=$TARGET_FOLDER/phone_setting.xml
PHONE_NAME=`cat $PHONE_NAME_FILE`
PHONE_STABLE_BRANCH=`grep -oP '<default revision="\Kstable_[\d.]+' $XML_FILE`

echo -e "current phone_name is \033[33m$PHONE_NAME\033[0m"
echo -e "stable branch is \033[33m$PHONE_STABLE_BRANCH\033[0m"
echo ""

#check branch
ALL_PROJECT_FOLDER=`repo list | cut -d ' ' -f 1`
for i in ${ALL_PROJECT_FOLDER[@]}
do
    #TODO: should remove
    if [ "$i" == "build" ];then
        continue
    fi

    cd $REPO_ROOT/$i
    if [ "`git branch | grep "^* " | cut -c 3-`" != "$PHONE_NAME" ];then
        echo -e "\033[31mNot on \"$PHONE_NAME\" branch, in $i\033[0m"
        exit 1
    fi
done

#clean folder
#clean patch folder
if [ -d $TARGET_FOLDER/patch ];then
    rm -rf $TARGET_FOLDER/patch
fi
mkdir -p $TARGET_FOLDER/patch

for i in ${ALL_PROJECT_FOLDER[@]}
do
    mkdir -p $TARGET_FOLDER/patch/$i/commit
    mkdir -p $TARGET_FOLDER/patch/$i/cached
    mkdir -p $TARGET_FOLDER/patch/$i/uncached
    mkdir -p $TARGET_FOLDER/patch/$i/untracked
done
#clean .cur_project
if [ -d $TARGET_FOLDER/.cur_project ];then
	rm $TARGET_FOLDER/.cur_project
fi
#TODO: clean config folder

#exact patches
for i in ${ALL_PROJECT_FOLDER[@]}
do
	#TODO: should remove	
	if [ "$i" == "build" ];then
		continue
	fi

    cd $REPO_ROOT/$i
	git format-patch ut_repo/$PHONE_STABLE_BRANCH -o $TARGET_FOLDER/patch/$i/commit
	git diff --cached > $TARGET_FOLDER/patch/$i/cached/cached.patch
	if [ ! -s $TARGET_FOLDER/patch/$i/cached/cached.patch ];then
		rm $TARGET_FOLDER/patch/$i/cached/cached.patch
	fi
	git diff > $TARGET_FOLDER/patch/$i/uncached/uncached.patch
	if [ ! -s $TARGET_FOLDER/patch/$i/uncached/uncached.patch ];then
		rm $TARGET_FOLDER/patch/$i/uncached/uncached.patch
	fi
	git ls-files --others --exclude-standard | xargs -t -I{} cp -rf --parents {} $TARGET_FOLDER/patch/$i/untracked/

done

#remove empty patch folder
del_empty_folder ()
{
	find "$1" -mindepth 1 -maxdepth 1 -type d | while read -r dir
	do
		if [[ -z "$(find "$dir" -mindepth 1 -type f)" ]] >/dev/null
		then
			rm -rf "$dir" 
		fi
		if [ -d "$dir" ]
		then
			del_empty_folder "$dir"
		fi
	done
}
del_empty_folder "$TARGET_FOLDER/patch"
echo -e "\033[33mexact patches finished\033[0m"

#copy .cur_project
cp $REPO_ROOT/.cur_project $TARGET_FOLDER/

#TODO: copy config files
#copy config files

#clean all
repo forall -i ost/build -c git reset --hard ut_repo/$PHONE_STABLE_BRANCH
repo forall -i ost/build -c git clean -df
repo abandon $PHONE_NAME
repo init -m all_$PHONE_STABLE_BRANCH.xml
repo sync -d
echo -e "\033[33mclean all finished\033[0m"
echo -e "\033[32mStash \"$PHONE_NAME\" success\033[0m"
