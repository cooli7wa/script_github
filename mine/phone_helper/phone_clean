#!/bin/bash -

REPO_ROOT=`repo info | grep "Mount path" | head -1 | grep -o '/.*/'`
CUSTOM_FOLDER=$REPO_ROOT/customization/
NEW_FOLDER=$CUSTOM_FOLDER/new
VENDOR_FOLDER=$CUSTOM_FOLDER/vendor

source $REPO_ROOT/tools_manager/phone_helper/_phone_utils

####################################################################################

clean_uncommit=0
echo_color YELLOW "Clean uncommit changes?(y/N)"
read choose
if [[ "z$choose" =~ ^z[yY](es)?$ ]];then
	clean_uncommit=1
fi

choosed_folder=""
unchoosed_folder=""
vendor_phone_name=""
new_phone_name=""
if [ -e "$VENDOR_FOLDER/phone_name" ]; then
	vendor_phone_name=`cat $VENDOR_FOLDER/phone_name`
fi
if [ -e "$NEW_FOLDER/phone_name" ]; then
	new_phone_name=`cat $NEW_FOLDER/phone_name`
fi
if [[ -z "$vendor_phone_name" && -z "$new_phone_name" ]]; then
	echo_color RED "No current phone to clean"
	exit 1
else
	if [[ -n "$new_phone_name" && -n "$vendor_phone_name" ]]; then
		echo_color "Please choose which to clean:"
		echo "1 \"$new_phone_name\" (new phone)"
		echo "2 \"$vendor_phone_name\" (vendor phone)"
		read choose
		case "$choose" in
		1) choosed_folder=$NEW_FOLDER; unchoosed_folder=$VENDOR_FOLDER;;
		2) choosed_folder=$VENDOR_FOLDER; unchoosed_folder=$NEW_FOLDER;;
		esac
	else
		if [ -n "$vendor_phone_name" ]; then
			choosed_folder=$VENDOR_FOLDER
		else
			choosed_folder=$NEW_FOLDER
		fi
	fi
fi

PHONE_NAME_FILE=$choosed_folder/phone_name
XML_FILE=$choosed_folder/stable.xml
PHONE_NAME=`cat $PHONE_NAME_FILE`
PHONE_STABLE_VERSION=`grep -oP '<default revision="\Kstable_[\d.]+' $XML_FILE`
PHONE_IGNORE_PATCH_LIST_FILE_PATH=$choosed_folder/ignore_patch_list.txt

show_info $PHONE_NAME $PHONE_STABLE_VERSION

mrepo abandon $PHONE_NAME
if [ $clean_uncommit -eq 1 ];then
	mrepo forall -c git reset
	mrepo forall -c git clean -df
fi
smart_xml_change "$unchoosed_folder"
rm $XML_FILE
rm $PHONE_NAME_FILE
rm -rf $PHONE_IGNORE_PATCH_LIST_FILE_PATH

echo_color GREEN "Clean success"
