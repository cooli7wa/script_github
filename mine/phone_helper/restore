#!/bin/bash -

#make sure manifest point to a exist xml
repo init -m all_trunk.xml

REPO_ROOT=`repo info | grep "Mount path" | head -1 | grep -o '/.*/'`
CUSTOM_FOLDER=$REPO_ROOT/customization/
TMP_FOLDER=$CUSTOM_FOLDER/tmp
VENDOR_FOLDER=$CUSTOM_FOLDER/vendor

#TODO: deal with opts, if checkout to new branch

if [ ! -d "$VENDOR_FOLDER" ];then
	echo "No phones"
	exit 1
fi

phones=`cd $VENDOR_FOLDER; find -mindepth 1 -maxdepth 1 -type d | sed "s/^\.\///g"`
phone_index=0
for phone in $phones
do
	((phone_index++))
	phone_list[$phone_index]=$phone
	echo "$phone_index $phone"
done

PHONE_NAME=""
while [ 1 ]
do
	read -p "Please input number or input keywords: " choose
	if [[ $choose =~ ^[0-9]+$ ]]; then
		if [ $choose -gt $phone_index ]; then
			echo "$choose > $phone_index, please choose again"
		else
			PHONE_NAME=${phone_list[$choose]}
			break
		fi
	else
		choose_phones=`echo -e $phones | grep $choose`
		if [ -z "$choose_phones" ]; then
			echo "No such phone"
			continue
		fi
		phone_index=0
		for phone in $choose_phones
		do
			((phone_index++))
			choose_phone_list[$phone_index]=$phone
			echo "$phone_index $phone"
		done
		read -p "Please input number: " choose
		PHONE_NAME=${choose_phone_list[$choose]}
		break
	fi
done
echo "You choose \"$PHONE_NAME\""

TARGET_FOLDER=$CUSTOM_FOLDER/vendor/$PHONE_NAME
XML_FILE=$VENDOR_FOLDER/phone_setting.xml
PHONE_NAME_FILE=$VENDOR_FOLDER/phone_name
cp $TARGET_FOLDER/phone_setting.xml $XML_FILE
echo $PHONE_NAME > $PHONE_NAME_FILE
PHONE_STABLE_BRANCH=`grep -oP '<default revision="\Kstable_[\d.]+' $XML_FILE`

#prepare branch
echo -e "\033[33mBegin to repo init and sync..\033[0m"
repo init -m ../../customization/vendor/phone_setting.xml
repo sync -d
#repo forall -i ost/build -c git reset --hard ut_repo/$PHONE_STABLE_BRANCH
#repo forall -i ost/build -c git clean -df
echo -e "\033[33mCheckout to tmp phone branch for develop..\033[0m"
repo abandon $PHONE_NAME
repo forall -i ost/build -c git checkout -b $PHONE_NAME

#add patches
cd $TARGET_FOLDER/patch
find ./ -mindepth 1 -maxdepth 1 -type d | while read -r dir
do
    cd $REPO_ROOT/$dir
    if [ -d $TARGET_FOLDER/patch/$dir/commit ];then
        git am $TARGET_FOLDER/patch/$dir/commit/*
    fi
done

#restore .cur_project
cp $TARGET_FOLDER/.cur_project $REPO_ROOT

echo -e "\033[32mRestore \"$PHONE_NAME\" success\033[0m"
