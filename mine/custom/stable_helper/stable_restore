#!/bin/bash -

REPO_ROOT=`repo info | grep "Mount path" | head -1 | grep -o '/.*/'`
ALL_PROJECT_FOLDER=`repo list | cut -d ' ' -f 1`
COMMON_FOLDER_PATH=$REPO_ROOT/customization/common
PHONE_HELPER_FOLDER_PATH=$REPO_ROOT/tools_manager/phone_helper
STABLE_VERSION=""

source $PHONE_HELPER_FOLDER_PATH/_phone_utils

#list current stable version
CURRENT_STABLE_LIST=`cd $COMMON_FOLDER_PATH; ls -1`
echo_color YELLOW "Please choose stable version: "
choose_one "$CURRENT_STABLE_LIST" STABLE_VERSION

STABLE_FOLDER_PATH=$REPO_ROOT/customization/common/$STABLE_VERSION
TARGET_FOLDER_PATH=$STABLE_FOLDER_PATH

####################################################################################

echo_color YELLOW "Begin restore stable, please wait .."

if [ -n "`mrepo branch | grep " $STABLE_VERSION "`" ];then
	mrepo abandon $STABLE_VERSION
fi

mrepo init -m ../../customization/common/$STABLE_VERSION/stable.xml
mrepo sync -d
mrepo forall -c git checkout -b $STABLE_VERSION

#restore patch
if [ -e $TARGET_FOLDER_PATH/patch ];then
	cd $TARGET_FOLDER_PATH/patch
	find ./ -mindepth 1 -maxdepth 1 -type d | while read -r dir
	do
		cd $REPO_ROOT/$dir
		if [ -d $TARGET_FOLDER_PATH/patch/$dir/commit ];then
			git am $TARGET_FOLDER_PATH/patch/$dir/commit/*
		fi
	done
fi

#restore .cur_project
cp $TARGET_FOLDER_PATH/.cur_project $REPO_ROOT

echo_color GREEN "Restore \"$STABLE_VERSION\" success"
